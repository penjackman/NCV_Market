
import pandas as pd
import datetime
import matplotlib.pyplot as plt
import yfinance as yf
import numpy as np

# Window length for moving average
window_length = 14

def Ticker(start_date, end_date, ticker):
    
    tickerData = yf.Ticker(ticker)
    tickerDf = tickerData.history(period='1d', start=start_date, end=end_date)
    sCloses = tickerDf['Close'].to_list()
    sDates = tickerDf.index.to_list()
    sDates = pd.to_datetime(sDates)
    sDates = sDates.strftime("%Y-%m-%d")

    return sDates, sCloses


# Get just the adjusted close
def computeRSI (data, time_window):
    diff = data.diff(1).dropna()        # diff in one field(one day)

    #this preservers dimensions off diff values
    up_chg = 0 * diff
    down_chg = 0 * diff
    
    # up change is equal to the positive difference, otherwise equal to zero
    up_chg[diff > 0] = diff[ diff>0 ]
    
    # down change is equal to negative deifference, otherwise equal to zero
    down_chg[diff < 0] = diff[ diff < 0 ]
    
    # check pandas documentation for ewm
    # https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.ewm.html
    # values are related to exponential decay
    # we set com=time_window-1 so we get decay alpha=1/time_window
    up_chg_avg   = up_chg.ewm(com=time_window-1 , min_periods=time_window).mean()
    down_chg_avg = down_chg.ewm(com=time_window-1 , min_periods=time_window).mean()
    
    rs = abs(up_chg_avg/down_chg_avg)
    rsiSeries = 100 - 100/(1+rs)
     
    rsiValues = rsiSeries.values
    rsi = rsiValues[len(rsiValues)-1]

    return rsi

def main():

    #ticker = input("Enter Ticker: ")
    ticker = 'AMZN'

    # Dates
    start = '2020-03-01'
    end = '2020-04-16'
    # Get data
    sDates, sCloses = Ticker(start, end, ticker)
    psCloses = pd.Series(sCloses, sDates)

    rsi = computeRSI(psCloses, 14)

    print("RSI is ", rsi)

if __name__ == '__main__':
    main()
